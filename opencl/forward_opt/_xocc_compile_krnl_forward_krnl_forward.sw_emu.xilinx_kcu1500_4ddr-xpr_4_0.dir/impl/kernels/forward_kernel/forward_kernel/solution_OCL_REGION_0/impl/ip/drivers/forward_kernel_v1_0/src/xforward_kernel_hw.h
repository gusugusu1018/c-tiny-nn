// ==============================================================
// File generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2017.2
// Copyright (C) 1986-2017 Xilinx, Inc. All Rights Reserved.
// 
// ==============================================================

// control
// 0x00 : Control signals
//        bit 0  - ap_start (Read/Write/COH)
//        bit 1  - ap_done (Read/COR)
//        bit 2  - ap_idle (Read)
//        bit 3  - ap_ready (Read)
//        bit 7  - auto_restart (Read/Write)
//        others - reserved
// 0x04 : Global Interrupt Enable Register
//        bit 0  - Global Interrupt Enable (Read/Write)
//        others - reserved
// 0x08 : IP Interrupt Enable Register (Read/Write)
//        bit 0  - Channel 0 (ap_done)
//        bit 1  - Channel 1 (ap_ready)
//        others - reserved
// 0x0c : IP Interrupt Status Register (Read/TOW)
//        bit 0  - Channel 0 (ap_done)
//        bit 1  - Channel 1 (ap_ready)
//        others - reserved
// 0x10 : Data signal of src_data
//        bit 31~0 - src_data[31:0] (Read/Write)
// 0x14 : Data signal of src_data
//        bit 31~0 - src_data[63:32] (Read/Write)
// 0x18 : reserved
// 0x1c : Data signal of dst_data
//        bit 31~0 - dst_data[31:0] (Read/Write)
// 0x20 : Data signal of dst_data
//        bit 31~0 - dst_data[63:32] (Read/Write)
// 0x24 : reserved
// 0x28 : Data signal of w01
//        bit 31~0 - w01[31:0] (Read/Write)
// 0x2c : Data signal of w01
//        bit 31~0 - w01[63:32] (Read/Write)
// 0x30 : reserved
// 0x34 : Data signal of b1
//        bit 31~0 - b1[31:0] (Read/Write)
// 0x38 : Data signal of b1
//        bit 31~0 - b1[63:32] (Read/Write)
// 0x3c : reserved
// 0x40 : Data signal of w12
//        bit 31~0 - w12[31:0] (Read/Write)
// 0x44 : Data signal of w12
//        bit 31~0 - w12[63:32] (Read/Write)
// 0x48 : reserved
// 0x4c : Data signal of b2
//        bit 31~0 - b2[31:0] (Read/Write)
// 0x50 : Data signal of b2
//        bit 31~0 - b2[63:32] (Read/Write)
// 0x54 : reserved
// 0x58 : Data signal of w23
//        bit 31~0 - w23[31:0] (Read/Write)
// 0x5c : Data signal of w23
//        bit 31~0 - w23[63:32] (Read/Write)
// 0x60 : reserved
// 0x64 : Data signal of b3
//        bit 31~0 - b3[31:0] (Read/Write)
// 0x68 : Data signal of b3
//        bit 31~0 - b3[63:32] (Read/Write)
// 0x6c : reserved
// (SC = Self Clear, COR = Clear on Read, TOW = Toggle on Write, COH = Clear on Handshake)

#define XFORWARD_KERNEL_CONTROL_ADDR_AP_CTRL       0x00
#define XFORWARD_KERNEL_CONTROL_ADDR_GIE           0x04
#define XFORWARD_KERNEL_CONTROL_ADDR_IER           0x08
#define XFORWARD_KERNEL_CONTROL_ADDR_ISR           0x0c
#define XFORWARD_KERNEL_CONTROL_ADDR_SRC_DATA_DATA 0x10
#define XFORWARD_KERNEL_CONTROL_BITS_SRC_DATA_DATA 64
#define XFORWARD_KERNEL_CONTROL_ADDR_DST_DATA_DATA 0x1c
#define XFORWARD_KERNEL_CONTROL_BITS_DST_DATA_DATA 64
#define XFORWARD_KERNEL_CONTROL_ADDR_W01_DATA      0x28
#define XFORWARD_KERNEL_CONTROL_BITS_W01_DATA      64
#define XFORWARD_KERNEL_CONTROL_ADDR_B1_DATA       0x34
#define XFORWARD_KERNEL_CONTROL_BITS_B1_DATA       64
#define XFORWARD_KERNEL_CONTROL_ADDR_W12_DATA      0x40
#define XFORWARD_KERNEL_CONTROL_BITS_W12_DATA      64
#define XFORWARD_KERNEL_CONTROL_ADDR_B2_DATA       0x4c
#define XFORWARD_KERNEL_CONTROL_BITS_B2_DATA       64
#define XFORWARD_KERNEL_CONTROL_ADDR_W23_DATA      0x58
#define XFORWARD_KERNEL_CONTROL_BITS_W23_DATA      64
#define XFORWARD_KERNEL_CONTROL_ADDR_B3_DATA       0x64
#define XFORWARD_KERNEL_CONTROL_BITS_B3_DATA       64

