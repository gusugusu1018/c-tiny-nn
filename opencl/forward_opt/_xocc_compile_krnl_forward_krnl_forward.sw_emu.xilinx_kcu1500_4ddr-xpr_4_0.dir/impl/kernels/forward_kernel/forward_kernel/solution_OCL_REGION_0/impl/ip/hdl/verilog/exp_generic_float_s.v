// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2017.2
// Copyright (C) 1986-2017 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module exp_generic_float_s (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        x,
        ap_return
);

parameter    ap_ST_fsm_pp0_stage0 = 1'd1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [31:0] x;
output  [31:0] ap_return;

reg ap_done;
reg ap_idle;
reg ap_ready;

(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_enable_reg_pp0_iter0;
wire    ap_block_pp0_stage0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
reg    ap_enable_reg_pp0_iter4;
reg    ap_enable_reg_pp0_iter5;
reg    ap_enable_reg_pp0_iter6;
reg    ap_enable_reg_pp0_iter7;
reg    ap_enable_reg_pp0_iter8;
reg    ap_enable_reg_pp0_iter9;
reg    ap_enable_reg_pp0_iter10;
reg    ap_enable_reg_pp0_iter11;
reg    ap_enable_reg_pp0_iter12;
reg    ap_enable_reg_pp0_iter13;
reg    ap_enable_reg_pp0_iter14;
reg    ap_enable_reg_pp0_iter15;
reg    ap_enable_reg_pp0_iter16;
reg    ap_enable_reg_pp0_iter17;
reg    ap_enable_reg_pp0_iter18;
reg    ap_enable_reg_pp0_iter19;
reg    ap_enable_reg_pp0_iter20;
reg    ap_idle_pp0;
reg    ap_block_state1_pp0_stage0_iter0;
wire    ap_block_state2_pp0_stage0_iter1;
wire    ap_block_state3_pp0_stage0_iter2;
wire    ap_block_state4_pp0_stage0_iter3;
wire    ap_block_state5_pp0_stage0_iter4;
wire    ap_block_state6_pp0_stage0_iter5;
wire    ap_block_state7_pp0_stage0_iter6;
wire    ap_block_state8_pp0_stage0_iter7;
wire    ap_block_state9_pp0_stage0_iter8;
wire    ap_block_state10_pp0_stage0_iter9;
wire    ap_block_state11_pp0_stage0_iter10;
wire    ap_block_state12_pp0_stage0_iter11;
wire    ap_block_state13_pp0_stage0_iter12;
wire    ap_block_state14_pp0_stage0_iter13;
wire    ap_block_state15_pp0_stage0_iter14;
wire    ap_block_state16_pp0_stage0_iter15;
wire    ap_block_state17_pp0_stage0_iter16;
wire    ap_block_state18_pp0_stage0_iter17;
wire    ap_block_state19_pp0_stage0_iter18;
wire    ap_block_state20_pp0_stage0_iter19;
wire    ap_block_state21_pp0_stage0_iter20;
reg    ap_block_pp0_stage0_11001;
wire   [8:0] hls_exp_reduce_anonymous_namespace_table_exp_Z1_ap_ufixed_27_1_ap_q_mode_5_ap_o_mode_3_0_array_V_address0;
reg    hls_exp_reduce_anonymous_namespace_table_exp_Z1_ap_ufixed_27_1_ap_q_mode_5_ap_o_mode_3_0_array_V_ce0;
wire   [26:0] hls_exp_reduce_anonymous_namespace_table_exp_Z1_ap_ufixed_27_1_ap_q_mode_5_ap_o_mode_3_0_array_V_q0;
wire   [4:0] hls_exp_reduce_anonymous_namespace_table_f_Z2_ap_ufixed_27_0_ap_q_mode_5_ap_o_mode_3_0_array_V_address0;
reg    hls_exp_reduce_anonymous_namespace_table_f_Z2_ap_ufixed_27_0_ap_q_mode_5_ap_o_mode_3_0_array_V_ce0;
wire   [7:0] hls_exp_reduce_anonymous_namespace_table_f_Z2_ap_ufixed_27_0_ap_q_mode_5_ap_o_mode_3_0_array_V_q0;
wire   [0:0] p_Result_s_fu_188_p3;
reg   [0:0] p_Result_s_reg_908;
reg   [0:0] ap_reg_pp0_iter1_p_Result_s_reg_908;
reg   [0:0] ap_reg_pp0_iter2_p_Result_s_reg_908;
reg   [0:0] ap_reg_pp0_iter3_p_Result_s_reg_908;
reg   [0:0] ap_reg_pp0_iter4_p_Result_s_reg_908;
reg   [0:0] ap_reg_pp0_iter5_p_Result_s_reg_908;
reg   [0:0] ap_reg_pp0_iter6_p_Result_s_reg_908;
reg   [0:0] ap_reg_pp0_iter7_p_Result_s_reg_908;
reg   [0:0] ap_reg_pp0_iter8_p_Result_s_reg_908;
reg   [0:0] ap_reg_pp0_iter9_p_Result_s_reg_908;
reg   [0:0] ap_reg_pp0_iter10_p_Result_s_reg_908;
reg   [0:0] ap_reg_pp0_iter11_p_Result_s_reg_908;
reg   [0:0] ap_reg_pp0_iter12_p_Result_s_reg_908;
reg   [0:0] ap_reg_pp0_iter13_p_Result_s_reg_908;
reg   [0:0] ap_reg_pp0_iter14_p_Result_s_reg_908;
reg   [0:0] ap_reg_pp0_iter15_p_Result_s_reg_908;
reg   [0:0] ap_reg_pp0_iter16_p_Result_s_reg_908;
reg   [0:0] ap_reg_pp0_iter17_p_Result_s_reg_908;
reg   [0:0] ap_reg_pp0_iter18_p_Result_s_reg_908;
reg   [0:0] ap_reg_pp0_iter19_p_Result_s_reg_908;
wire   [0:0] not_demorgan_fu_222_p2;
reg   [0:0] not_demorgan_reg_915;
reg   [0:0] ap_reg_pp0_iter1_not_demorgan_reg_915;
reg   [0:0] ap_reg_pp0_iter2_not_demorgan_reg_915;
reg   [0:0] ap_reg_pp0_iter3_not_demorgan_reg_915;
reg   [0:0] ap_reg_pp0_iter4_not_demorgan_reg_915;
reg   [0:0] ap_reg_pp0_iter5_not_demorgan_reg_915;
reg   [0:0] ap_reg_pp0_iter6_not_demorgan_reg_915;
reg   [0:0] ap_reg_pp0_iter7_not_demorgan_reg_915;
reg   [0:0] ap_reg_pp0_iter8_not_demorgan_reg_915;
reg   [0:0] ap_reg_pp0_iter9_not_demorgan_reg_915;
reg   [0:0] ap_reg_pp0_iter10_not_demorgan_reg_915;
reg   [0:0] ap_reg_pp0_iter11_not_demorgan_reg_915;
reg   [0:0] ap_reg_pp0_iter12_not_demorgan_reg_915;
reg   [0:0] ap_reg_pp0_iter13_not_demorgan_reg_915;
reg   [0:0] ap_reg_pp0_iter14_not_demorgan_reg_915;
reg   [0:0] ap_reg_pp0_iter15_not_demorgan_reg_915;
reg   [0:0] ap_reg_pp0_iter16_not_demorgan_reg_915;
reg   [0:0] ap_reg_pp0_iter17_not_demorgan_reg_915;
reg   [0:0] ap_reg_pp0_iter18_not_demorgan_reg_915;
wire   [0:0] tmp_4_i_i_fu_234_p2;
reg   [0:0] tmp_4_i_i_reg_921;
reg   [0:0] ap_reg_pp0_iter1_tmp_4_i_i_reg_921;
reg   [0:0] ap_reg_pp0_iter2_tmp_4_i_i_reg_921;
reg   [0:0] ap_reg_pp0_iter3_tmp_4_i_i_reg_921;
reg   [0:0] ap_reg_pp0_iter4_tmp_4_i_i_reg_921;
reg   [0:0] ap_reg_pp0_iter5_tmp_4_i_i_reg_921;
reg   [0:0] ap_reg_pp0_iter6_tmp_4_i_i_reg_921;
reg   [0:0] ap_reg_pp0_iter7_tmp_4_i_i_reg_921;
reg   [0:0] ap_reg_pp0_iter8_tmp_4_i_i_reg_921;
reg   [0:0] ap_reg_pp0_iter9_tmp_4_i_i_reg_921;
reg   [0:0] ap_reg_pp0_iter10_tmp_4_i_i_reg_921;
reg   [0:0] ap_reg_pp0_iter11_tmp_4_i_i_reg_921;
reg   [0:0] ap_reg_pp0_iter12_tmp_4_i_i_reg_921;
reg   [0:0] ap_reg_pp0_iter13_tmp_4_i_i_reg_921;
reg   [0:0] ap_reg_pp0_iter14_tmp_4_i_i_reg_921;
reg   [0:0] ap_reg_pp0_iter15_tmp_4_i_i_reg_921;
reg   [0:0] ap_reg_pp0_iter16_tmp_4_i_i_reg_921;
reg   [0:0] ap_reg_pp0_iter17_tmp_4_i_i_reg_921;
reg   [0:0] ap_reg_pp0_iter18_tmp_4_i_i_reg_921;
reg   [0:0] ap_reg_pp0_iter19_tmp_4_i_i_reg_921;
wire   [24:0] p_Val2_8_fu_264_p3;
reg   [24:0] p_Val2_8_reg_928;
wire   [0:0] isNeg_fu_272_p3;
reg   [0:0] isNeg_reg_933;
reg   [0:0] ap_reg_pp0_iter1_isNeg_reg_933;
wire   [8:0] sh_assign_1_fu_290_p3;
reg   [8:0] sh_assign_1_reg_939;
wire   [0:0] tmp_25_fu_298_p2;
reg   [0:0] tmp_25_reg_945;
reg   [0:0] ap_reg_pp0_iter1_tmp_25_reg_945;
reg   [0:0] ap_reg_pp0_iter2_tmp_25_reg_945;
reg   [0:0] ap_reg_pp0_iter3_tmp_25_reg_945;
reg   [0:0] ap_reg_pp0_iter4_tmp_25_reg_945;
reg   [0:0] ap_reg_pp0_iter5_tmp_25_reg_945;
reg   [0:0] ap_reg_pp0_iter6_tmp_25_reg_945;
reg   [0:0] ap_reg_pp0_iter7_tmp_25_reg_945;
reg   [0:0] ap_reg_pp0_iter8_tmp_25_reg_945;
reg   [0:0] ap_reg_pp0_iter9_tmp_25_reg_945;
reg   [0:0] ap_reg_pp0_iter10_tmp_25_reg_945;
reg   [0:0] ap_reg_pp0_iter11_tmp_25_reg_945;
reg   [0:0] ap_reg_pp0_iter12_tmp_25_reg_945;
reg   [0:0] ap_reg_pp0_iter13_tmp_25_reg_945;
reg   [0:0] ap_reg_pp0_iter14_tmp_25_reg_945;
reg   [0:0] ap_reg_pp0_iter15_tmp_25_reg_945;
reg   [0:0] ap_reg_pp0_iter16_tmp_25_reg_945;
reg   [0:0] ap_reg_pp0_iter17_tmp_25_reg_945;
reg   [0:0] ap_reg_pp0_iter18_tmp_25_reg_945;
reg   [0:0] tmp_78_reg_953;
reg   [0:0] ap_reg_pp0_iter1_tmp_78_reg_953;
reg   [0:0] ap_reg_pp0_iter2_tmp_78_reg_953;
reg   [0:0] ap_reg_pp0_iter3_tmp_78_reg_953;
reg   [0:0] ap_reg_pp0_iter4_tmp_78_reg_953;
reg   [0:0] ap_reg_pp0_iter5_tmp_78_reg_953;
reg   [0:0] ap_reg_pp0_iter6_tmp_78_reg_953;
reg   [0:0] ap_reg_pp0_iter7_tmp_78_reg_953;
reg   [0:0] ap_reg_pp0_iter8_tmp_78_reg_953;
reg   [0:0] ap_reg_pp0_iter9_tmp_78_reg_953;
reg   [0:0] ap_reg_pp0_iter10_tmp_78_reg_953;
reg   [0:0] ap_reg_pp0_iter11_tmp_78_reg_953;
reg   [0:0] ap_reg_pp0_iter12_tmp_78_reg_953;
reg   [0:0] ap_reg_pp0_iter13_tmp_78_reg_953;
reg   [0:0] ap_reg_pp0_iter14_tmp_78_reg_953;
reg   [0:0] ap_reg_pp0_iter15_tmp_78_reg_953;
reg   [0:0] ap_reg_pp0_iter16_tmp_78_reg_953;
reg   [0:0] ap_reg_pp0_iter17_tmp_78_reg_953;
reg   [0:0] ap_reg_pp0_iter18_tmp_78_reg_953;
reg   [0:0] ap_reg_pp0_iter19_tmp_78_reg_953;
wire  signed [35:0] p_Val2_25_cast1_fu_319_p1;
reg  signed [35:0] p_Val2_25_cast1_reg_959;
wire  signed [31:0] sh_assign_1_cast_fu_323_p1;
reg  signed [31:0] sh_assign_1_cast_reg_964;
wire   [35:0] p_Val2_9_fu_349_p3;
reg   [35:0] p_Val2_9_reg_970;
reg   [35:0] ap_reg_pp0_iter2_p_Val2_9_reg_970;
reg   [35:0] ap_reg_pp0_iter3_p_Val2_9_reg_970;
reg   [35:0] ap_reg_pp0_iter4_p_Val2_9_reg_970;
reg   [35:0] ap_reg_pp0_iter5_p_Val2_9_reg_970;
reg   [35:0] ap_reg_pp0_iter6_p_Val2_9_reg_970;
reg   [35:0] ap_reg_pp0_iter7_p_Val2_9_reg_970;
reg   [35:0] ap_reg_pp0_iter8_p_Val2_9_reg_970;
reg   [35:0] ap_reg_pp0_iter9_p_Val2_9_reg_970;
reg   [35:0] ap_reg_pp0_iter10_p_Val2_9_reg_970;
reg   [31:0] tmp_1_reg_975;
reg  signed [12:0] tmp_7_reg_981;
reg   [0:0] tmp_72_reg_986;
reg   [0:0] ap_reg_pp0_iter2_tmp_72_reg_986;
wire   [0:0] tmp_26_fu_410_p2;
reg   [0:0] tmp_26_reg_996;
reg   [0:0] ap_reg_pp0_iter3_tmp_26_reg_996;
reg   [0:0] ap_reg_pp0_iter4_tmp_26_reg_996;
reg   [0:0] ap_reg_pp0_iter5_tmp_26_reg_996;
reg   [0:0] ap_reg_pp0_iter6_tmp_26_reg_996;
reg   [0:0] ap_reg_pp0_iter7_tmp_26_reg_996;
reg   [0:0] ap_reg_pp0_iter8_tmp_26_reg_996;
reg   [0:0] ap_reg_pp0_iter9_tmp_26_reg_996;
reg   [0:0] ap_reg_pp0_iter10_tmp_26_reg_996;
reg   [0:0] ap_reg_pp0_iter11_tmp_26_reg_996;
reg   [0:0] ap_reg_pp0_iter12_tmp_26_reg_996;
reg   [0:0] ap_reg_pp0_iter13_tmp_26_reg_996;
reg   [0:0] ap_reg_pp0_iter14_tmp_26_reg_996;
reg   [0:0] ap_reg_pp0_iter15_tmp_26_reg_996;
reg   [0:0] ap_reg_pp0_iter16_tmp_26_reg_996;
reg   [0:0] ap_reg_pp0_iter17_tmp_26_reg_996;
reg   [0:0] ap_reg_pp0_iter18_tmp_26_reg_996;
wire  signed [24:0] grp_fu_893_p3;
reg  signed [24:0] r_V_reg_1001;
wire   [14:0] tmp_74_fu_426_p1;
reg   [14:0] tmp_74_reg_1007;
wire   [9:0] r_exp_V_3_fu_464_p3;
reg  signed [9:0] r_exp_V_3_reg_1012;
reg   [9:0] ap_reg_pp0_iter5_r_exp_V_3_reg_1012;
reg   [9:0] ap_reg_pp0_iter6_r_exp_V_3_reg_1012;
reg   [9:0] ap_reg_pp0_iter7_r_exp_V_3_reg_1012;
reg   [9:0] ap_reg_pp0_iter8_r_exp_V_3_reg_1012;
reg   [9:0] ap_reg_pp0_iter9_r_exp_V_3_reg_1012;
reg   [9:0] ap_reg_pp0_iter10_r_exp_V_3_reg_1012;
reg   [9:0] ap_reg_pp0_iter11_r_exp_V_3_reg_1012;
reg   [9:0] ap_reg_pp0_iter12_r_exp_V_3_reg_1012;
reg   [9:0] ap_reg_pp0_iter13_r_exp_V_3_reg_1012;
reg   [9:0] ap_reg_pp0_iter14_r_exp_V_3_reg_1012;
reg   [9:0] ap_reg_pp0_iter15_r_exp_V_3_reg_1012;
reg   [9:0] ap_reg_pp0_iter16_r_exp_V_3_reg_1012;
reg   [9:0] ap_reg_pp0_iter17_r_exp_V_3_reg_1012;
reg   [35:0] tmp_48_reg_1024;
reg   [8:0] m_diff_hi_V_reg_1029;
reg   [8:0] ap_reg_pp0_iter12_m_diff_hi_V_reg_1029;
wire   [17:0] p_Val2_15_fu_521_p1;
reg   [17:0] p_Val2_15_reg_1034;
reg   [17:0] ap_reg_pp0_iter12_p_Val2_15_reg_1034;
reg   [17:0] ap_reg_pp0_iter13_p_Val2_15_reg_1034;
reg   [4:0] Z2_ind_V_reg_1039;
reg   [7:0] p_Val2_16_reg_1054;
reg   [26:0] p_Val2_17_reg_1059;
reg   [26:0] ap_reg_pp0_iter15_p_Val2_17_reg_1059;
reg   [26:0] ap_reg_pp0_iter16_p_Val2_17_reg_1059;
reg   [17:0] exp_Z1P_m_1_V_reg_1064;
reg   [17:0] tmp_19_reg_1069;
wire   [27:0] p_Val2_6_fu_584_p2;
reg   [27:0] p_Val2_6_reg_1084;
wire   [35:0] grp_fu_902_p2;
reg   [35:0] p_Val2_1_reg_1089;
wire   [44:0] p_Val2_10_fu_600_p2;
reg   [44:0] p_Val2_10_reg_1094;
wire   [0:0] tmp_76_fu_606_p3;
reg   [0:0] tmp_76_reg_1100;
wire   [9:0] r_exp_V_2_fu_619_p3;
reg   [9:0] r_exp_V_2_reg_1105;
reg   [2:0] tmp_77_reg_1110;
wire   [7:0] tmp_79_fu_636_p1;
reg   [7:0] tmp_79_reg_1115;
wire   [0:0] sel_tmp1_fu_700_p2;
reg   [0:0] sel_tmp1_reg_1120;
wire   [0:0] sel_tmp10_fu_732_p2;
reg   [0:0] sel_tmp10_reg_1126;
wire   [0:0] tmp35_fu_766_p2;
reg   [0:0] tmp35_reg_1132;
wire   [31:0] tmp_39_fu_789_p3;
reg   [31:0] tmp_39_reg_1137;
reg    ap_block_pp0_stage0_subdone;
wire   [63:0] tmp_i1_fu_535_p1;
wire   [63:0] tmp_17_fu_539_p1;
wire   [31:0] p_Val2_s_fu_184_p1;
wire   [7:0] loc_V_fu_196_p4;
wire   [22:0] loc_V_1_fu_206_p1;
wire   [0:0] tmp_i_i_fu_210_p2;
wire   [0:0] tmp_1_i_i_fu_216_p2;
wire   [0:0] tmp_3_i_i_fu_228_p2;
wire   [8:0] tmp_i_cast_fu_240_p1;
wire   [24:0] p_Result_5_fu_250_p3;
wire   [24:0] p_Val2_7_fu_258_p2;
wire   [8:0] m_exp_fu_244_p2;
wire   [7:0] tmp_8_fu_280_p2;
wire  signed [8:0] tmp_8_cast_fu_286_p1;
wire   [28:0] p_Val2_18_fu_312_p3;
wire  signed [28:0] sh_assign_1_cast_cast_fu_326_p1;
wire   [28:0] tmp_5_fu_333_p2;
wire   [35:0] tmp_9_fu_329_p1;
wire  signed [35:0] tmp_5_cast_fu_339_p1;
wire   [35:0] tmp_6_fu_343_p2;
wire   [31:0] tmp_2_fu_384_p2;
wire   [31:0] tmp_3_fu_388_p2;
wire   [31:0] tmp_47_fu_395_p3;
wire   [35:0] tmp_14_fu_402_p3;
wire  signed [15:0] tmp_10_fu_415_p3;
wire   [9:0] tmp_11_fu_429_p4;
wire   [0:0] tmp_12_fu_445_p2;
wire   [9:0] ret_V_2_fu_450_p2;
wire   [0:0] tmp_73_fu_438_p3;
wire   [9:0] p_s_fu_456_p3;
wire   [36:0] grp_fu_475_p0;
wire   [45:0] grp_fu_475_p2;
wire   [36:0] tmp_16_fu_494_p3;
wire  signed [37:0] tmp_15_fu_491_p1;
wire  signed [37:0] tmp_21_cast_fu_501_p1;
wire   [37:0] p_Val2_5_fu_505_p2;
wire   [18:0] tmp_6_i_fu_543_p1;
wire   [18:0] tmp_7_i_fu_546_p1;
wire   [18:0] p_Val2_4_fu_549_p2;
wire   [27:0] tmp_20_fu_581_p1;
wire   [44:0] tmp_21_fu_590_p3;
wire   [44:0] tmp_28_cast_fu_597_p1;
wire   [9:0] r_exp_V_fu_614_p2;
wire   [0:0] icmp_fu_645_p2;
wire   [22:0] tmp_29_fu_660_p4;
wire   [22:0] tmp_30_fu_669_p4;
wire   [7:0] out_exp_V_fu_685_p2;
wire   [22:0] loc_V_2_fu_678_p3;
wire   [0:0] not_Result_i4_fu_640_p2;
wire   [0:0] tmp_fu_705_p2;
wire   [0:0] or_cond_fu_650_p2;
wire   [0:0] sel_tmp8_fu_721_p2;
wire   [0:0] sel_tmp6_fu_716_p2;
wire   [0:0] sel_tmp9_fu_726_p2;
wire   [0:0] sel_tmp12_fu_738_p2;
wire   [0:0] sel_tmp44_demorgan_fu_749_p2;
wire   [0:0] sel_tmp13_fu_744_p2;
wire   [0:0] sel_tmp14_fu_754_p2;
wire   [0:0] tmp_28_fu_655_p2;
wire   [0:0] sel_tmp15_fu_760_p2;
wire   [31:0] p_Result_6_fu_690_p4;
wire   [0:0] sel_tmp2_fu_711_p2;
wire   [0:0] tmp_38_fu_784_p2;
wire   [31:0] tmp_37_fu_776_p3;
wire   [31:0] tmp_36_fu_772_p1;
wire   [0:0] x_is_ninf_fu_797_p2;
wire   [0:0] tmp_4_i_i_not_fu_806_p2;
wire   [0:0] sel_tmp3_fu_816_p2;
wire   [0:0] tmp32_fu_822_p2;
wire   [0:0] sel_tmp_fu_811_p2;
wire   [0:0] sel_tmp5_fu_833_p2;
wire   [0:0] tmp33_fu_838_p2;
wire   [0:0] sel_tmp4_fu_827_p2;
wire   [0:0] sel_tmp11_fu_843_p2;
wire   [0:0] sel_tmp7_fu_801_p2;
wire   [0:0] tmp_41_fu_861_p2;
wire   [31:0] tmp_40_fu_853_p3;
wire   [0:0] tmp34_fu_849_p2;
wire   [0:0] sel_tmp16_fu_874_p2;
wire   [0:0] tmp_43_fu_879_p2;
wire   [31:0] tmp_42_fu_867_p3;
wire   [12:0] grp_fu_893_p0;
wire   [17:0] grp_fu_902_p0;
wire   [17:0] grp_fu_902_p1;
reg   [0:0] ap_NS_fsm;
reg    ap_idle_pp0_0to19;
reg    ap_reset_idle_pp0;
wire    ap_enable_pp0;
wire   [35:0] grp_fu_902_p00;
wire   [35:0] grp_fu_902_p10;

// power-on initialization
initial begin
#0 ap_CS_fsm = 1'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_enable_reg_pp0_iter5 = 1'b0;
#0 ap_enable_reg_pp0_iter6 = 1'b0;
#0 ap_enable_reg_pp0_iter7 = 1'b0;
#0 ap_enable_reg_pp0_iter8 = 1'b0;
#0 ap_enable_reg_pp0_iter9 = 1'b0;
#0 ap_enable_reg_pp0_iter10 = 1'b0;
#0 ap_enable_reg_pp0_iter11 = 1'b0;
#0 ap_enable_reg_pp0_iter12 = 1'b0;
#0 ap_enable_reg_pp0_iter13 = 1'b0;
#0 ap_enable_reg_pp0_iter14 = 1'b0;
#0 ap_enable_reg_pp0_iter15 = 1'b0;
#0 ap_enable_reg_pp0_iter16 = 1'b0;
#0 ap_enable_reg_pp0_iter17 = 1'b0;
#0 ap_enable_reg_pp0_iter18 = 1'b0;
#0 ap_enable_reg_pp0_iter19 = 1'b0;
#0 ap_enable_reg_pp0_iter20 = 1'b0;
end

exp_generic_float_s_hls_exp_reduce_anonymous_namespace_table_exp_Z1_ap_ufixed_27_1_ap_q_mode_5_ap_o_mode_3_0_array_V #(
    .DataWidth( 27 ),
    .AddressRange( 512 ),
    .AddressWidth( 9 ))
hls_exp_reduce_anonymous_namespace_table_exp_Z1_ap_ufixed_27_1_ap_q_mode_5_ap_o_mode_3_0_array_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(hls_exp_reduce_anonymous_namespace_table_exp_Z1_ap_ufixed_27_1_ap_q_mode_5_ap_o_mode_3_0_array_V_address0),
    .ce0(hls_exp_reduce_anonymous_namespace_table_exp_Z1_ap_ufixed_27_1_ap_q_mode_5_ap_o_mode_3_0_array_V_ce0),
    .q0(hls_exp_reduce_anonymous_namespace_table_exp_Z1_ap_ufixed_27_1_ap_q_mode_5_ap_o_mode_3_0_array_V_q0)
);

exp_generic_float_s_hls_exp_reduce_anonymous_namespace_table_f_Z2_ap_ufixed_27_0_ap_q_mode_5_ap_o_mode_3_0_array_V #(
    .DataWidth( 8 ),
    .AddressRange( 32 ),
    .AddressWidth( 5 ))
hls_exp_reduce_anonymous_namespace_table_f_Z2_ap_ufixed_27_0_ap_q_mode_5_ap_o_mode_3_0_array_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(hls_exp_reduce_anonymous_namespace_table_f_Z2_ap_ufixed_27_0_ap_q_mode_5_ap_o_mode_3_0_array_V_address0),
    .ce0(hls_exp_reduce_anonymous_namespace_table_f_Z2_ap_ufixed_27_0_ap_q_mode_5_ap_o_mode_3_0_array_V_ce0),
    .q0(hls_exp_reduce_anonymous_namespace_table_f_Z2_ap_ufixed_27_0_ap_q_mode_5_ap_o_mode_3_0_array_V_q0)
);

forward_kernel_mul_37ns_10s_46_6 #(
    .ID( 1 ),
    .NUM_STAGE( 6 ),
    .din0_WIDTH( 37 ),
    .din1_WIDTH( 10 ),
    .dout_WIDTH( 46 ))
forward_kernel_mul_37ns_10s_46_6_U1(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_475_p0),
    .din1(r_exp_V_3_reg_1012),
    .ce(1'b1),
    .dout(grp_fu_475_p2)
);

forward_kernel_mac_muladd_13ns_13s_16s_25_2 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 13 ),
    .din1_WIDTH( 13 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 25 ))
forward_kernel_mac_muladd_13ns_13s_16s_25_2_U2(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_893_p0),
    .din1(tmp_7_reg_981),
    .din2(tmp_10_fu_415_p3),
    .ce(1'b1),
    .dout(grp_fu_893_p3)
);

forward_kernel_mul_mul_18ns_18ns_36_3 #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 18 ),
    .din1_WIDTH( 18 ),
    .dout_WIDTH( 36 ))
forward_kernel_mul_mul_18ns_18ns_36_3_U3(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_902_p0),
    .din1(grp_fu_902_p1),
    .ce(1'b1),
    .dout(grp_fu_902_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_block_pp0_stage0_subdone == 1'b0))) begin
            ap_enable_reg_pp0_iter1 <= ap_start;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter10 <= 1'b0;
    end else begin
        if ((ap_block_pp0_stage0_subdone == 1'b0)) begin
            ap_enable_reg_pp0_iter10 <= ap_enable_reg_pp0_iter9;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter11 <= 1'b0;
    end else begin
        if ((ap_block_pp0_stage0_subdone == 1'b0)) begin
            ap_enable_reg_pp0_iter11 <= ap_enable_reg_pp0_iter10;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter12 <= 1'b0;
    end else begin
        if ((ap_block_pp0_stage0_subdone == 1'b0)) begin
            ap_enable_reg_pp0_iter12 <= ap_enable_reg_pp0_iter11;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter13 <= 1'b0;
    end else begin
        if ((ap_block_pp0_stage0_subdone == 1'b0)) begin
            ap_enable_reg_pp0_iter13 <= ap_enable_reg_pp0_iter12;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter14 <= 1'b0;
    end else begin
        if ((ap_block_pp0_stage0_subdone == 1'b0)) begin
            ap_enable_reg_pp0_iter14 <= ap_enable_reg_pp0_iter13;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter15 <= 1'b0;
    end else begin
        if ((ap_block_pp0_stage0_subdone == 1'b0)) begin
            ap_enable_reg_pp0_iter15 <= ap_enable_reg_pp0_iter14;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter16 <= 1'b0;
    end else begin
        if ((ap_block_pp0_stage0_subdone == 1'b0)) begin
            ap_enable_reg_pp0_iter16 <= ap_enable_reg_pp0_iter15;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter17 <= 1'b0;
    end else begin
        if ((ap_block_pp0_stage0_subdone == 1'b0)) begin
            ap_enable_reg_pp0_iter17 <= ap_enable_reg_pp0_iter16;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter18 <= 1'b0;
    end else begin
        if ((ap_block_pp0_stage0_subdone == 1'b0)) begin
            ap_enable_reg_pp0_iter18 <= ap_enable_reg_pp0_iter17;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter19 <= 1'b0;
    end else begin
        if ((ap_block_pp0_stage0_subdone == 1'b0)) begin
            ap_enable_reg_pp0_iter19 <= ap_enable_reg_pp0_iter18;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((ap_block_pp0_stage0_subdone == 1'b0)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter20 <= 1'b0;
    end else begin
        if ((ap_block_pp0_stage0_subdone == 1'b0)) begin
            ap_enable_reg_pp0_iter20 <= ap_enable_reg_pp0_iter19;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((ap_block_pp0_stage0_subdone == 1'b0)) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if ((ap_block_pp0_stage0_subdone == 1'b0)) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter5 <= 1'b0;
    end else begin
        if ((ap_block_pp0_stage0_subdone == 1'b0)) begin
            ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter6 <= 1'b0;
    end else begin
        if ((ap_block_pp0_stage0_subdone == 1'b0)) begin
            ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter7 <= 1'b0;
    end else begin
        if ((ap_block_pp0_stage0_subdone == 1'b0)) begin
            ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter8 <= 1'b0;
    end else begin
        if ((ap_block_pp0_stage0_subdone == 1'b0)) begin
            ap_enable_reg_pp0_iter8 <= ap_enable_reg_pp0_iter7;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter9 <= 1'b0;
    end else begin
        if ((ap_block_pp0_stage0_subdone == 1'b0)) begin
            ap_enable_reg_pp0_iter9 <= ap_enable_reg_pp0_iter8;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((ap_block_pp0_stage0_11001 == 1'b0)) begin
        Z2_ind_V_reg_1039 <= {{p_Val2_5_fu_505_p2[17:13]}};
        ap_reg_pp0_iter10_not_demorgan_reg_915 <= ap_reg_pp0_iter9_not_demorgan_reg_915;
        ap_reg_pp0_iter10_p_Result_s_reg_908 <= ap_reg_pp0_iter9_p_Result_s_reg_908;
        ap_reg_pp0_iter10_p_Val2_9_reg_970 <= ap_reg_pp0_iter9_p_Val2_9_reg_970;
        ap_reg_pp0_iter10_r_exp_V_3_reg_1012 <= ap_reg_pp0_iter9_r_exp_V_3_reg_1012;
        ap_reg_pp0_iter10_tmp_25_reg_945 <= ap_reg_pp0_iter9_tmp_25_reg_945;
        ap_reg_pp0_iter10_tmp_26_reg_996 <= ap_reg_pp0_iter9_tmp_26_reg_996;
        ap_reg_pp0_iter10_tmp_4_i_i_reg_921 <= ap_reg_pp0_iter9_tmp_4_i_i_reg_921;
        ap_reg_pp0_iter10_tmp_78_reg_953 <= ap_reg_pp0_iter9_tmp_78_reg_953;
        ap_reg_pp0_iter11_not_demorgan_reg_915 <= ap_reg_pp0_iter10_not_demorgan_reg_915;
        ap_reg_pp0_iter11_p_Result_s_reg_908 <= ap_reg_pp0_iter10_p_Result_s_reg_908;
        ap_reg_pp0_iter11_r_exp_V_3_reg_1012 <= ap_reg_pp0_iter10_r_exp_V_3_reg_1012;
        ap_reg_pp0_iter11_tmp_25_reg_945 <= ap_reg_pp0_iter10_tmp_25_reg_945;
        ap_reg_pp0_iter11_tmp_26_reg_996 <= ap_reg_pp0_iter10_tmp_26_reg_996;
        ap_reg_pp0_iter11_tmp_4_i_i_reg_921 <= ap_reg_pp0_iter10_tmp_4_i_i_reg_921;
        ap_reg_pp0_iter11_tmp_78_reg_953 <= ap_reg_pp0_iter10_tmp_78_reg_953;
        ap_reg_pp0_iter12_m_diff_hi_V_reg_1029 <= m_diff_hi_V_reg_1029;
        ap_reg_pp0_iter12_not_demorgan_reg_915 <= ap_reg_pp0_iter11_not_demorgan_reg_915;
        ap_reg_pp0_iter12_p_Result_s_reg_908 <= ap_reg_pp0_iter11_p_Result_s_reg_908;
        ap_reg_pp0_iter12_p_Val2_15_reg_1034 <= p_Val2_15_reg_1034;
        ap_reg_pp0_iter12_r_exp_V_3_reg_1012 <= ap_reg_pp0_iter11_r_exp_V_3_reg_1012;
        ap_reg_pp0_iter12_tmp_25_reg_945 <= ap_reg_pp0_iter11_tmp_25_reg_945;
        ap_reg_pp0_iter12_tmp_26_reg_996 <= ap_reg_pp0_iter11_tmp_26_reg_996;
        ap_reg_pp0_iter12_tmp_4_i_i_reg_921 <= ap_reg_pp0_iter11_tmp_4_i_i_reg_921;
        ap_reg_pp0_iter12_tmp_78_reg_953 <= ap_reg_pp0_iter11_tmp_78_reg_953;
        ap_reg_pp0_iter13_not_demorgan_reg_915 <= ap_reg_pp0_iter12_not_demorgan_reg_915;
        ap_reg_pp0_iter13_p_Result_s_reg_908 <= ap_reg_pp0_iter12_p_Result_s_reg_908;
        ap_reg_pp0_iter13_p_Val2_15_reg_1034 <= ap_reg_pp0_iter12_p_Val2_15_reg_1034;
        ap_reg_pp0_iter13_r_exp_V_3_reg_1012 <= ap_reg_pp0_iter12_r_exp_V_3_reg_1012;
        ap_reg_pp0_iter13_tmp_25_reg_945 <= ap_reg_pp0_iter12_tmp_25_reg_945;
        ap_reg_pp0_iter13_tmp_26_reg_996 <= ap_reg_pp0_iter12_tmp_26_reg_996;
        ap_reg_pp0_iter13_tmp_4_i_i_reg_921 <= ap_reg_pp0_iter12_tmp_4_i_i_reg_921;
        ap_reg_pp0_iter13_tmp_78_reg_953 <= ap_reg_pp0_iter12_tmp_78_reg_953;
        ap_reg_pp0_iter14_not_demorgan_reg_915 <= ap_reg_pp0_iter13_not_demorgan_reg_915;
        ap_reg_pp0_iter14_p_Result_s_reg_908 <= ap_reg_pp0_iter13_p_Result_s_reg_908;
        ap_reg_pp0_iter14_r_exp_V_3_reg_1012 <= ap_reg_pp0_iter13_r_exp_V_3_reg_1012;
        ap_reg_pp0_iter14_tmp_25_reg_945 <= ap_reg_pp0_iter13_tmp_25_reg_945;
        ap_reg_pp0_iter14_tmp_26_reg_996 <= ap_reg_pp0_iter13_tmp_26_reg_996;
        ap_reg_pp0_iter14_tmp_4_i_i_reg_921 <= ap_reg_pp0_iter13_tmp_4_i_i_reg_921;
        ap_reg_pp0_iter14_tmp_78_reg_953 <= ap_reg_pp0_iter13_tmp_78_reg_953;
        ap_reg_pp0_iter15_not_demorgan_reg_915 <= ap_reg_pp0_iter14_not_demorgan_reg_915;
        ap_reg_pp0_iter15_p_Result_s_reg_908 <= ap_reg_pp0_iter14_p_Result_s_reg_908;
        ap_reg_pp0_iter15_p_Val2_17_reg_1059 <= p_Val2_17_reg_1059;
        ap_reg_pp0_iter15_r_exp_V_3_reg_1012 <= ap_reg_pp0_iter14_r_exp_V_3_reg_1012;
        ap_reg_pp0_iter15_tmp_25_reg_945 <= ap_reg_pp0_iter14_tmp_25_reg_945;
        ap_reg_pp0_iter15_tmp_26_reg_996 <= ap_reg_pp0_iter14_tmp_26_reg_996;
        ap_reg_pp0_iter15_tmp_4_i_i_reg_921 <= ap_reg_pp0_iter14_tmp_4_i_i_reg_921;
        ap_reg_pp0_iter15_tmp_78_reg_953 <= ap_reg_pp0_iter14_tmp_78_reg_953;
        ap_reg_pp0_iter16_not_demorgan_reg_915 <= ap_reg_pp0_iter15_not_demorgan_reg_915;
        ap_reg_pp0_iter16_p_Result_s_reg_908 <= ap_reg_pp0_iter15_p_Result_s_reg_908;
        ap_reg_pp0_iter16_p_Val2_17_reg_1059 <= ap_reg_pp0_iter15_p_Val2_17_reg_1059;
        ap_reg_pp0_iter16_r_exp_V_3_reg_1012 <= ap_reg_pp0_iter15_r_exp_V_3_reg_1012;
        ap_reg_pp0_iter16_tmp_25_reg_945 <= ap_reg_pp0_iter15_tmp_25_reg_945;
        ap_reg_pp0_iter16_tmp_26_reg_996 <= ap_reg_pp0_iter15_tmp_26_reg_996;
        ap_reg_pp0_iter16_tmp_4_i_i_reg_921 <= ap_reg_pp0_iter15_tmp_4_i_i_reg_921;
        ap_reg_pp0_iter16_tmp_78_reg_953 <= ap_reg_pp0_iter15_tmp_78_reg_953;
        ap_reg_pp0_iter17_not_demorgan_reg_915 <= ap_reg_pp0_iter16_not_demorgan_reg_915;
        ap_reg_pp0_iter17_p_Result_s_reg_908 <= ap_reg_pp0_iter16_p_Result_s_reg_908;
        ap_reg_pp0_iter17_r_exp_V_3_reg_1012 <= ap_reg_pp0_iter16_r_exp_V_3_reg_1012;
        ap_reg_pp0_iter17_tmp_25_reg_945 <= ap_reg_pp0_iter16_tmp_25_reg_945;
        ap_reg_pp0_iter17_tmp_26_reg_996 <= ap_reg_pp0_iter16_tmp_26_reg_996;
        ap_reg_pp0_iter17_tmp_4_i_i_reg_921 <= ap_reg_pp0_iter16_tmp_4_i_i_reg_921;
        ap_reg_pp0_iter17_tmp_78_reg_953 <= ap_reg_pp0_iter16_tmp_78_reg_953;
        ap_reg_pp0_iter18_not_demorgan_reg_915 <= ap_reg_pp0_iter17_not_demorgan_reg_915;
        ap_reg_pp0_iter18_p_Result_s_reg_908 <= ap_reg_pp0_iter17_p_Result_s_reg_908;
        ap_reg_pp0_iter18_tmp_25_reg_945 <= ap_reg_pp0_iter17_tmp_25_reg_945;
        ap_reg_pp0_iter18_tmp_26_reg_996 <= ap_reg_pp0_iter17_tmp_26_reg_996;
        ap_reg_pp0_iter18_tmp_4_i_i_reg_921 <= ap_reg_pp0_iter17_tmp_4_i_i_reg_921;
        ap_reg_pp0_iter18_tmp_78_reg_953 <= ap_reg_pp0_iter17_tmp_78_reg_953;
        ap_reg_pp0_iter19_p_Result_s_reg_908 <= ap_reg_pp0_iter18_p_Result_s_reg_908;
        ap_reg_pp0_iter19_tmp_4_i_i_reg_921 <= ap_reg_pp0_iter18_tmp_4_i_i_reg_921;
        ap_reg_pp0_iter19_tmp_78_reg_953 <= ap_reg_pp0_iter18_tmp_78_reg_953;
        ap_reg_pp0_iter2_not_demorgan_reg_915 <= ap_reg_pp0_iter1_not_demorgan_reg_915;
        ap_reg_pp0_iter2_p_Result_s_reg_908 <= ap_reg_pp0_iter1_p_Result_s_reg_908;
        ap_reg_pp0_iter2_p_Val2_9_reg_970 <= p_Val2_9_reg_970;
        ap_reg_pp0_iter2_tmp_25_reg_945 <= ap_reg_pp0_iter1_tmp_25_reg_945;
        ap_reg_pp0_iter2_tmp_4_i_i_reg_921 <= ap_reg_pp0_iter1_tmp_4_i_i_reg_921;
        ap_reg_pp0_iter2_tmp_72_reg_986 <= tmp_72_reg_986;
        ap_reg_pp0_iter2_tmp_78_reg_953 <= ap_reg_pp0_iter1_tmp_78_reg_953;
        ap_reg_pp0_iter3_not_demorgan_reg_915 <= ap_reg_pp0_iter2_not_demorgan_reg_915;
        ap_reg_pp0_iter3_p_Result_s_reg_908 <= ap_reg_pp0_iter2_p_Result_s_reg_908;
        ap_reg_pp0_iter3_p_Val2_9_reg_970 <= ap_reg_pp0_iter2_p_Val2_9_reg_970;
        ap_reg_pp0_iter3_tmp_25_reg_945 <= ap_reg_pp0_iter2_tmp_25_reg_945;
        ap_reg_pp0_iter3_tmp_26_reg_996 <= tmp_26_reg_996;
        ap_reg_pp0_iter3_tmp_4_i_i_reg_921 <= ap_reg_pp0_iter2_tmp_4_i_i_reg_921;
        ap_reg_pp0_iter3_tmp_78_reg_953 <= ap_reg_pp0_iter2_tmp_78_reg_953;
        ap_reg_pp0_iter4_not_demorgan_reg_915 <= ap_reg_pp0_iter3_not_demorgan_reg_915;
        ap_reg_pp0_iter4_p_Result_s_reg_908 <= ap_reg_pp0_iter3_p_Result_s_reg_908;
        ap_reg_pp0_iter4_p_Val2_9_reg_970 <= ap_reg_pp0_iter3_p_Val2_9_reg_970;
        ap_reg_pp0_iter4_tmp_25_reg_945 <= ap_reg_pp0_iter3_tmp_25_reg_945;
        ap_reg_pp0_iter4_tmp_26_reg_996 <= ap_reg_pp0_iter3_tmp_26_reg_996;
        ap_reg_pp0_iter4_tmp_4_i_i_reg_921 <= ap_reg_pp0_iter3_tmp_4_i_i_reg_921;
        ap_reg_pp0_iter4_tmp_78_reg_953 <= ap_reg_pp0_iter3_tmp_78_reg_953;
        ap_reg_pp0_iter5_not_demorgan_reg_915 <= ap_reg_pp0_iter4_not_demorgan_reg_915;
        ap_reg_pp0_iter5_p_Result_s_reg_908 <= ap_reg_pp0_iter4_p_Result_s_reg_908;
        ap_reg_pp0_iter5_p_Val2_9_reg_970 <= ap_reg_pp0_iter4_p_Val2_9_reg_970;
        ap_reg_pp0_iter5_r_exp_V_3_reg_1012 <= r_exp_V_3_reg_1012;
        ap_reg_pp0_iter5_tmp_25_reg_945 <= ap_reg_pp0_iter4_tmp_25_reg_945;
        ap_reg_pp0_iter5_tmp_26_reg_996 <= ap_reg_pp0_iter4_tmp_26_reg_996;
        ap_reg_pp0_iter5_tmp_4_i_i_reg_921 <= ap_reg_pp0_iter4_tmp_4_i_i_reg_921;
        ap_reg_pp0_iter5_tmp_78_reg_953 <= ap_reg_pp0_iter4_tmp_78_reg_953;
        ap_reg_pp0_iter6_not_demorgan_reg_915 <= ap_reg_pp0_iter5_not_demorgan_reg_915;
        ap_reg_pp0_iter6_p_Result_s_reg_908 <= ap_reg_pp0_iter5_p_Result_s_reg_908;
        ap_reg_pp0_iter6_p_Val2_9_reg_970 <= ap_reg_pp0_iter5_p_Val2_9_reg_970;
        ap_reg_pp0_iter6_r_exp_V_3_reg_1012 <= ap_reg_pp0_iter5_r_exp_V_3_reg_1012;
        ap_reg_pp0_iter6_tmp_25_reg_945 <= ap_reg_pp0_iter5_tmp_25_reg_945;
        ap_reg_pp0_iter6_tmp_26_reg_996 <= ap_reg_pp0_iter5_tmp_26_reg_996;
        ap_reg_pp0_iter6_tmp_4_i_i_reg_921 <= ap_reg_pp0_iter5_tmp_4_i_i_reg_921;
        ap_reg_pp0_iter6_tmp_78_reg_953 <= ap_reg_pp0_iter5_tmp_78_reg_953;
        ap_reg_pp0_iter7_not_demorgan_reg_915 <= ap_reg_pp0_iter6_not_demorgan_reg_915;
        ap_reg_pp0_iter7_p_Result_s_reg_908 <= ap_reg_pp0_iter6_p_Result_s_reg_908;
        ap_reg_pp0_iter7_p_Val2_9_reg_970 <= ap_reg_pp0_iter6_p_Val2_9_reg_970;
        ap_reg_pp0_iter7_r_exp_V_3_reg_1012 <= ap_reg_pp0_iter6_r_exp_V_3_reg_1012;
        ap_reg_pp0_iter7_tmp_25_reg_945 <= ap_reg_pp0_iter6_tmp_25_reg_945;
        ap_reg_pp0_iter7_tmp_26_reg_996 <= ap_reg_pp0_iter6_tmp_26_reg_996;
        ap_reg_pp0_iter7_tmp_4_i_i_reg_921 <= ap_reg_pp0_iter6_tmp_4_i_i_reg_921;
        ap_reg_pp0_iter7_tmp_78_reg_953 <= ap_reg_pp0_iter6_tmp_78_reg_953;
        ap_reg_pp0_iter8_not_demorgan_reg_915 <= ap_reg_pp0_iter7_not_demorgan_reg_915;
        ap_reg_pp0_iter8_p_Result_s_reg_908 <= ap_reg_pp0_iter7_p_Result_s_reg_908;
        ap_reg_pp0_iter8_p_Val2_9_reg_970 <= ap_reg_pp0_iter7_p_Val2_9_reg_970;
        ap_reg_pp0_iter8_r_exp_V_3_reg_1012 <= ap_reg_pp0_iter7_r_exp_V_3_reg_1012;
        ap_reg_pp0_iter8_tmp_25_reg_945 <= ap_reg_pp0_iter7_tmp_25_reg_945;
        ap_reg_pp0_iter8_tmp_26_reg_996 <= ap_reg_pp0_iter7_tmp_26_reg_996;
        ap_reg_pp0_iter8_tmp_4_i_i_reg_921 <= ap_reg_pp0_iter7_tmp_4_i_i_reg_921;
        ap_reg_pp0_iter8_tmp_78_reg_953 <= ap_reg_pp0_iter7_tmp_78_reg_953;
        ap_reg_pp0_iter9_not_demorgan_reg_915 <= ap_reg_pp0_iter8_not_demorgan_reg_915;
        ap_reg_pp0_iter9_p_Result_s_reg_908 <= ap_reg_pp0_iter8_p_Result_s_reg_908;
        ap_reg_pp0_iter9_p_Val2_9_reg_970 <= ap_reg_pp0_iter8_p_Val2_9_reg_970;
        ap_reg_pp0_iter9_r_exp_V_3_reg_1012 <= ap_reg_pp0_iter8_r_exp_V_3_reg_1012;
        ap_reg_pp0_iter9_tmp_25_reg_945 <= ap_reg_pp0_iter8_tmp_25_reg_945;
        ap_reg_pp0_iter9_tmp_26_reg_996 <= ap_reg_pp0_iter8_tmp_26_reg_996;
        ap_reg_pp0_iter9_tmp_4_i_i_reg_921 <= ap_reg_pp0_iter8_tmp_4_i_i_reg_921;
        ap_reg_pp0_iter9_tmp_78_reg_953 <= ap_reg_pp0_iter8_tmp_78_reg_953;
        exp_Z1P_m_1_V_reg_1064 <= {{p_Val2_4_fu_549_p2[18:1]}};
        m_diff_hi_V_reg_1029 <= {{p_Val2_5_fu_505_p2[26:18]}};
        p_Val2_10_reg_1094 <= p_Val2_10_fu_600_p2;
        p_Val2_15_reg_1034 <= p_Val2_15_fu_521_p1;
        p_Val2_16_reg_1054 <= hls_exp_reduce_anonymous_namespace_table_f_Z2_ap_ufixed_27_0_ap_q_mode_5_ap_o_mode_3_0_array_V_q0;
        p_Val2_17_reg_1059 <= hls_exp_reduce_anonymous_namespace_table_exp_Z1_ap_ufixed_27_1_ap_q_mode_5_ap_o_mode_3_0_array_V_q0;
        p_Val2_1_reg_1089 <= grp_fu_902_p2;
        p_Val2_6_reg_1084 <= p_Val2_6_fu_584_p2;
        r_exp_V_2_reg_1105 <= r_exp_V_2_fu_619_p3;
        r_exp_V_3_reg_1012 <= r_exp_V_3_fu_464_p3;
        sel_tmp10_reg_1126 <= sel_tmp10_fu_732_p2;
        sel_tmp1_reg_1120 <= sel_tmp1_fu_700_p2;
        tmp35_reg_1132 <= tmp35_fu_766_p2;
        tmp_19_reg_1069 <= {{hls_exp_reduce_anonymous_namespace_table_exp_Z1_ap_ufixed_27_1_ap_q_mode_5_ap_o_mode_3_0_array_V_q0[26:9]}};
        tmp_26_reg_996 <= tmp_26_fu_410_p2;
        tmp_39_reg_1137[30 : 0] <= tmp_39_fu_789_p3[30 : 0];
        tmp_48_reg_1024 <= {{grp_fu_475_p2[45:10]}};
        tmp_74_reg_1007 <= tmp_74_fu_426_p1;
        tmp_76_reg_1100 <= p_Val2_10_fu_600_p2[32'd43];
        tmp_77_reg_1110 <= {{r_exp_V_2_fu_619_p3[9:7]}};
        tmp_79_reg_1115 <= tmp_79_fu_636_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_block_pp0_stage0_11001 == 1'b0))) begin
        ap_reg_pp0_iter1_isNeg_reg_933 <= isNeg_reg_933;
        ap_reg_pp0_iter1_not_demorgan_reg_915 <= not_demorgan_reg_915;
        ap_reg_pp0_iter1_p_Result_s_reg_908 <= p_Result_s_reg_908;
        ap_reg_pp0_iter1_tmp_25_reg_945 <= tmp_25_reg_945;
        ap_reg_pp0_iter1_tmp_4_i_i_reg_921 <= tmp_4_i_i_reg_921;
        ap_reg_pp0_iter1_tmp_78_reg_953 <= tmp_78_reg_953;
        isNeg_reg_933 <= m_exp_fu_244_p2[32'd8];
        not_demorgan_reg_915 <= not_demorgan_fu_222_p2;
        p_Result_s_reg_908 <= p_Val2_s_fu_184_p1[32'd31];
        p_Val2_25_cast1_reg_959[35 : 4] <= p_Val2_25_cast1_fu_319_p1[35 : 4];
        p_Val2_8_reg_928 <= p_Val2_8_fu_264_p3;
        p_Val2_9_reg_970 <= p_Val2_9_fu_349_p3;
        sh_assign_1_cast_reg_964 <= sh_assign_1_cast_fu_323_p1;
        sh_assign_1_reg_939 <= sh_assign_1_fu_290_p3;
        tmp_1_reg_975 <= {{p_Val2_9_fu_349_p3[35:4]}};
        tmp_25_reg_945 <= tmp_25_fu_298_p2;
        tmp_4_i_i_reg_921 <= tmp_4_i_i_fu_234_p2;
        tmp_72_reg_986 <= p_Val2_9_fu_349_p3[32'd35];
        tmp_78_reg_953 <= p_Val2_8_fu_264_p3[32'd24];
        tmp_7_reg_981 <= {{p_Val2_9_fu_349_p3[35:23]}};
    end
end

always @ (posedge ap_clk) begin
    if (((ap_block_pp0_stage0_11001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter3))) begin
        r_V_reg_1001 <= grp_fu_893_p3;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_start) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_start) & (ap_block_pp0_stage0 == 1'b0)) | ((ap_block_pp0_stage0_11001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter20)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_start) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_idle_pp0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_enable_reg_pp0_iter0) & (1'b0 == ap_enable_reg_pp0_iter1) & (1'b0 == ap_enable_reg_pp0_iter2) & (1'b0 == ap_enable_reg_pp0_iter3) & (1'b0 == ap_enable_reg_pp0_iter4) & (1'b0 == ap_enable_reg_pp0_iter5) & (1'b0 == ap_enable_reg_pp0_iter6) & (1'b0 == ap_enable_reg_pp0_iter7) & (1'b0 == ap_enable_reg_pp0_iter8) & (1'b0 == ap_enable_reg_pp0_iter9) & (1'b0 == ap_enable_reg_pp0_iter10) & (1'b0 == ap_enable_reg_pp0_iter11) & (1'b0 == ap_enable_reg_pp0_iter12) & (1'b0 == ap_enable_reg_pp0_iter13) & (1'b0 == ap_enable_reg_pp0_iter14) & (1'b0 == ap_enable_reg_pp0_iter15) & (1'b0 == ap_enable_reg_pp0_iter16) & (1'b0 == ap_enable_reg_pp0_iter17) & (1'b0 == ap_enable_reg_pp0_iter18) & (1'b0 == ap_enable_reg_pp0_iter19) & (1'b0 == ap_enable_reg_pp0_iter20))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_enable_reg_pp0_iter0) & (1'b0 == ap_enable_reg_pp0_iter1) & (1'b0 == ap_enable_reg_pp0_iter2) & (1'b0 == ap_enable_reg_pp0_iter3) & (1'b0 == ap_enable_reg_pp0_iter4) & (1'b0 == ap_enable_reg_pp0_iter5) & (1'b0 == ap_enable_reg_pp0_iter6) & (1'b0 == ap_enable_reg_pp0_iter7) & (1'b0 == ap_enable_reg_pp0_iter8) & (1'b0 == ap_enable_reg_pp0_iter9) & (1'b0 == ap_enable_reg_pp0_iter10) & (1'b0 == ap_enable_reg_pp0_iter11) & (1'b0 == ap_enable_reg_pp0_iter12) & (1'b0 == ap_enable_reg_pp0_iter13) & (1'b0 == ap_enable_reg_pp0_iter14) & (1'b0 == ap_enable_reg_pp0_iter15) & (1'b0 == ap_enable_reg_pp0_iter16) & (1'b0 == ap_enable_reg_pp0_iter17) & (1'b0 == ap_enable_reg_pp0_iter18) & (1'b0 == ap_enable_reg_pp0_iter19))) begin
        ap_idle_pp0_0to19 = 1'b1;
    end else begin
        ap_idle_pp0_0to19 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_start) & (ap_block_pp0_stage0_11001 == 1'b0))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_start) & (1'b1 == ap_idle_pp0_0to19))) begin
        ap_reset_idle_pp0 = 1'b1;
    end else begin
        ap_reset_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp0_stage0_11001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter13))) begin
        hls_exp_reduce_anonymous_namespace_table_exp_Z1_ap_ufixed_27_1_ap_q_mode_5_ap_o_mode_3_0_array_V_ce0 = 1'b1;
    end else begin
        hls_exp_reduce_anonymous_namespace_table_exp_Z1_ap_ufixed_27_1_ap_q_mode_5_ap_o_mode_3_0_array_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp0_stage0_11001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter12))) begin
        hls_exp_reduce_anonymous_namespace_table_f_Z2_ap_ufixed_27_0_ap_q_mode_5_ap_o_mode_3_0_array_V_ce0 = 1'b1;
    end else begin
        hls_exp_reduce_anonymous_namespace_table_f_Z2_ap_ufixed_27_0_ap_q_mode_5_ap_o_mode_3_0_array_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_11001 = ((1'b0 == ap_start) & (1'b1 == ap_start));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = ((1'b0 == ap_start) & (1'b1 == ap_start));
end

assign ap_block_state10_pp0_stage0_iter9 = ~(1'b1 == 1'b1);

assign ap_block_state11_pp0_stage0_iter10 = ~(1'b1 == 1'b1);

assign ap_block_state12_pp0_stage0_iter11 = ~(1'b1 == 1'b1);

assign ap_block_state13_pp0_stage0_iter12 = ~(1'b1 == 1'b1);

assign ap_block_state14_pp0_stage0_iter13 = ~(1'b1 == 1'b1);

assign ap_block_state15_pp0_stage0_iter14 = ~(1'b1 == 1'b1);

assign ap_block_state16_pp0_stage0_iter15 = ~(1'b1 == 1'b1);

assign ap_block_state17_pp0_stage0_iter16 = ~(1'b1 == 1'b1);

assign ap_block_state18_pp0_stage0_iter17 = ~(1'b1 == 1'b1);

assign ap_block_state19_pp0_stage0_iter18 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state1_pp0_stage0_iter0 = (1'b0 == ap_start);
end

assign ap_block_state20_pp0_stage0_iter19 = ~(1'b1 == 1'b1);

assign ap_block_state21_pp0_stage0_iter20 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage0_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage0_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage0_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp0_stage0_iter8 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_reg_pp0_iter0 = ap_start;

assign ap_return = ((tmp_43_fu_879_p2[0:0] === 1'b1) ? 32'd0 : tmp_42_fu_867_p3);

assign grp_fu_475_p0 = 46'd47632711549;

assign grp_fu_893_p0 = 25'd2954;

assign grp_fu_902_p0 = grp_fu_902_p00;

assign grp_fu_902_p00 = exp_Z1P_m_1_V_reg_1064;

assign grp_fu_902_p1 = grp_fu_902_p10;

assign grp_fu_902_p10 = tmp_19_reg_1069;

assign hls_exp_reduce_anonymous_namespace_table_exp_Z1_ap_ufixed_27_1_ap_q_mode_5_ap_o_mode_3_0_array_V_address0 = tmp_17_fu_539_p1;

assign hls_exp_reduce_anonymous_namespace_table_f_Z2_ap_ufixed_27_0_ap_q_mode_5_ap_o_mode_3_0_array_V_address0 = tmp_i1_fu_535_p1;

assign icmp_fu_645_p2 = (($signed(tmp_77_reg_1110) > $signed(3'd0)) ? 1'b1 : 1'b0);

assign isNeg_fu_272_p3 = m_exp_fu_244_p2[32'd8];

assign loc_V_1_fu_206_p1 = p_Val2_s_fu_184_p1[22:0];

assign loc_V_2_fu_678_p3 = ((tmp_76_reg_1100[0:0] === 1'b1) ? tmp_29_fu_660_p4 : tmp_30_fu_669_p4);

assign loc_V_fu_196_p4 = {{p_Val2_s_fu_184_p1[30:23]}};

assign m_exp_fu_244_p2 = ($signed(9'd385) + $signed(tmp_i_cast_fu_240_p1));

assign not_Result_i4_fu_640_p2 = (ap_reg_pp0_iter18_p_Result_s_reg_908 ^ 1'd1);

assign not_demorgan_fu_222_p2 = (tmp_i_i_fu_210_p2 & tmp_1_i_i_fu_216_p2);

assign or_cond_fu_650_p2 = (ap_reg_pp0_iter18_tmp_26_reg_996 | icmp_fu_645_p2);

assign out_exp_V_fu_685_p2 = (8'd127 + tmp_79_reg_1115);

assign p_Result_5_fu_250_p3 = {{2'd1}, {loc_V_1_fu_206_p1}};

assign p_Result_6_fu_690_p4 = {{{{1'd0}, {out_exp_V_fu_685_p2}}}, {loc_V_2_fu_678_p3}};

assign p_Result_s_fu_188_p3 = p_Val2_s_fu_184_p1[32'd31];

assign p_Val2_10_fu_600_p2 = (tmp_21_fu_590_p3 + tmp_28_cast_fu_597_p1);

assign p_Val2_15_fu_521_p1 = p_Val2_5_fu_505_p2[17:0];

assign p_Val2_18_fu_312_p3 = {{p_Val2_8_reg_928}, {4'd0}};

assign p_Val2_25_cast1_fu_319_p1 = $signed(p_Val2_18_fu_312_p3);

assign p_Val2_4_fu_549_p2 = (tmp_6_i_fu_543_p1 + tmp_7_i_fu_546_p1);

assign p_Val2_5_fu_505_p2 = ($signed(tmp_15_fu_491_p1) - $signed(tmp_21_cast_fu_501_p1));

assign p_Val2_6_fu_584_p2 = (28'd4 + tmp_20_fu_581_p1);

assign p_Val2_7_fu_258_p2 = (25'd0 - p_Result_5_fu_250_p3);

assign p_Val2_8_fu_264_p3 = ((p_Result_s_fu_188_p3[0:0] === 1'b1) ? p_Val2_7_fu_258_p2 : p_Result_5_fu_250_p3);

assign p_Val2_9_fu_349_p3 = ((isNeg_reg_933[0:0] === 1'b1) ? tmp_5_cast_fu_339_p1 : tmp_6_fu_343_p2);

assign p_Val2_s_fu_184_p1 = x;

assign p_s_fu_456_p3 = ((tmp_12_fu_445_p2[0:0] === 1'b1) ? tmp_11_fu_429_p4 : ret_V_2_fu_450_p2);

assign r_exp_V_2_fu_619_p3 = ((tmp_76_fu_606_p3[0:0] === 1'b1) ? ap_reg_pp0_iter17_r_exp_V_3_reg_1012 : r_exp_V_fu_614_p2);

assign r_exp_V_3_fu_464_p3 = ((tmp_73_fu_438_p3[0:0] === 1'b1) ? p_s_fu_456_p3 : tmp_11_fu_429_p4);

assign r_exp_V_fu_614_p2 = ($signed(10'd1023) + $signed(ap_reg_pp0_iter17_r_exp_V_3_reg_1012));

assign ret_V_2_fu_450_p2 = (10'd1 + tmp_11_fu_429_p4);

assign sel_tmp10_fu_732_p2 = (sel_tmp6_fu_716_p2 | sel_tmp9_fu_726_p2);

assign sel_tmp11_fu_843_p2 = (tmp33_fu_838_p2 & sel_tmp4_fu_827_p2);

assign sel_tmp12_fu_738_p2 = (or_cond_fu_650_p2 ^ 1'd1);

assign sel_tmp13_fu_744_p2 = (ap_reg_pp0_iter18_tmp_25_reg_945 & sel_tmp12_fu_738_p2);

assign sel_tmp14_fu_754_p2 = (sel_tmp44_demorgan_fu_749_p2 ^ 1'd1);

assign sel_tmp15_fu_760_p2 = (sel_tmp13_fu_744_p2 | sel_tmp14_fu_754_p2);

assign sel_tmp16_fu_874_p2 = (tmp35_reg_1132 | tmp34_fu_849_p2);

assign sel_tmp1_fu_700_p2 = (ap_reg_pp0_iter18_not_demorgan_reg_915 ^ 1'd1);

assign sel_tmp2_fu_711_p2 = (tmp_fu_705_p2 & ap_reg_pp0_iter18_tmp_4_i_i_reg_921);

assign sel_tmp3_fu_816_p2 = (x_is_ninf_fu_797_p2 ^ 1'd1);

assign sel_tmp44_demorgan_fu_749_p2 = (ap_reg_pp0_iter18_tmp_25_reg_945 | icmp_fu_645_p2);

assign sel_tmp4_fu_827_p2 = (tmp32_fu_822_p2 & sel_tmp_fu_811_p2);

assign sel_tmp5_fu_833_p2 = (ap_reg_pp0_iter19_tmp_78_reg_953 ^ 1'd1);

assign sel_tmp6_fu_716_p2 = (ap_reg_pp0_iter18_tmp_25_reg_945 & or_cond_fu_650_p2);

assign sel_tmp7_fu_801_p2 = (x_is_ninf_fu_797_p2 & sel_tmp1_reg_1120);

assign sel_tmp8_fu_721_p2 = (ap_reg_pp0_iter18_tmp_25_reg_945 ^ 1'd1);

assign sel_tmp9_fu_726_p2 = (icmp_fu_645_p2 & sel_tmp8_fu_721_p2);

assign sel_tmp_fu_811_p2 = (ap_reg_pp0_iter19_p_Result_s_reg_908 | tmp_4_i_i_not_fu_806_p2);

assign sh_assign_1_cast_cast_fu_326_p1 = $signed(sh_assign_1_reg_939);

assign sh_assign_1_cast_fu_323_p1 = $signed(sh_assign_1_reg_939);

assign sh_assign_1_fu_290_p3 = ((isNeg_fu_272_p3[0:0] === 1'b1) ? tmp_8_cast_fu_286_p1 : m_exp_fu_244_p2);

assign tmp32_fu_822_p2 = (sel_tmp1_reg_1120 & sel_tmp3_fu_816_p2);

assign tmp33_fu_838_p2 = (sel_tmp10_reg_1126 & sel_tmp5_fu_833_p2);

assign tmp34_fu_849_p2 = (ap_reg_pp0_iter19_tmp_78_reg_953 & sel_tmp10_reg_1126);

assign tmp35_fu_766_p2 = (tmp_28_fu_655_p2 & sel_tmp15_fu_760_p2);

assign tmp_10_fu_415_p3 = {{ap_reg_pp0_iter2_tmp_72_reg_986}, {15'd16384}};

assign tmp_11_fu_429_p4 = {{r_V_reg_1001[24:15]}};

assign tmp_12_fu_445_p2 = ((tmp_74_reg_1007 == 15'd0) ? 1'b1 : 1'b0);

assign tmp_14_fu_402_p3 = {{tmp_47_fu_395_p3}, {4'd0}};

assign tmp_15_fu_491_p1 = $signed(ap_reg_pp0_iter10_p_Val2_9_reg_970);

assign tmp_16_fu_494_p3 = {{tmp_48_reg_1024}, {1'd0}};

assign tmp_17_fu_539_p1 = ap_reg_pp0_iter12_m_diff_hi_V_reg_1029;

assign tmp_1_i_i_fu_216_p2 = ((loc_V_1_fu_206_p1 != 23'd0) ? 1'b1 : 1'b0);

assign tmp_20_fu_581_p1 = ap_reg_pp0_iter16_p_Val2_17_reg_1059;

assign tmp_21_cast_fu_501_p1 = $signed(tmp_16_fu_494_p3);

assign tmp_21_fu_590_p3 = {{p_Val2_6_reg_1084}, {17'd0}};

assign tmp_25_fu_298_p2 = (($signed(m_exp_fu_244_p2) > $signed(9'd0)) ? 1'b1 : 1'b0);

assign tmp_26_fu_410_p2 = ((tmp_14_fu_402_p3 != p_Val2_25_cast1_reg_959) ? 1'b1 : 1'b0);

assign tmp_28_cast_fu_597_p1 = p_Val2_1_reg_1089;

assign tmp_28_fu_655_p2 = (($signed(r_exp_V_2_reg_1105) < $signed(10'd898)) ? 1'b1 : 1'b0);

assign tmp_29_fu_660_p4 = {{p_Val2_10_reg_1094[42:20]}};

assign tmp_2_fu_384_p2 = tmp_1_reg_975 << sh_assign_1_cast_reg_964;

assign tmp_30_fu_669_p4 = {{p_Val2_10_reg_1094[41:19]}};

assign tmp_36_fu_772_p1 = p_Result_6_fu_690_p4;

assign tmp_37_fu_776_p3 = ((sel_tmp2_fu_711_p2[0:0] === 1'b1) ? 32'd2139095040 : 32'd2147483647);

assign tmp_38_fu_784_p2 = (sel_tmp2_fu_711_p2 | ap_reg_pp0_iter18_not_demorgan_reg_915);

assign tmp_39_fu_789_p3 = ((tmp_38_fu_784_p2[0:0] === 1'b1) ? tmp_37_fu_776_p3 : tmp_36_fu_772_p1);

assign tmp_3_fu_388_p2 = $signed(tmp_1_reg_975) >>> sh_assign_1_cast_reg_964;

assign tmp_3_i_i_fu_228_p2 = ((loc_V_1_fu_206_p1 == 23'd0) ? 1'b1 : 1'b0);

assign tmp_40_fu_853_p3 = ((sel_tmp11_fu_843_p2[0:0] === 1'b1) ? 32'd2139095040 : 32'd0);

assign tmp_41_fu_861_p2 = (sel_tmp11_fu_843_p2 | sel_tmp7_fu_801_p2);

assign tmp_42_fu_867_p3 = ((tmp_41_fu_861_p2[0:0] === 1'b1) ? tmp_40_fu_853_p3 : tmp_39_reg_1137);

assign tmp_43_fu_879_p2 = (sel_tmp16_fu_874_p2 & sel_tmp4_fu_827_p2);

assign tmp_47_fu_395_p3 = ((ap_reg_pp0_iter1_isNeg_reg_933[0:0] === 1'b1) ? tmp_2_fu_384_p2 : tmp_3_fu_388_p2);

assign tmp_4_i_i_fu_234_p2 = (tmp_i_i_fu_210_p2 & tmp_3_i_i_fu_228_p2);

assign tmp_4_i_i_not_fu_806_p2 = (ap_reg_pp0_iter19_tmp_4_i_i_reg_921 ^ 1'd1);

assign tmp_5_cast_fu_339_p1 = $signed(tmp_5_fu_333_p2);

assign tmp_5_fu_333_p2 = $signed(p_Val2_18_fu_312_p3) >>> sh_assign_1_cast_cast_fu_326_p1;

assign tmp_6_fu_343_p2 = p_Val2_25_cast1_fu_319_p1 << tmp_9_fu_329_p1;

assign tmp_6_i_fu_543_p1 = ap_reg_pp0_iter13_p_Val2_15_reg_1034;

assign tmp_73_fu_438_p3 = r_V_reg_1001[32'd24];

assign tmp_74_fu_426_p1 = grp_fu_893_p3[14:0];

assign tmp_76_fu_606_p3 = p_Val2_10_fu_600_p2[32'd43];

assign tmp_79_fu_636_p1 = r_exp_V_2_fu_619_p3[7:0];

assign tmp_7_i_fu_546_p1 = p_Val2_16_reg_1054;

assign tmp_8_cast_fu_286_p1 = $signed(tmp_8_fu_280_p2);

assign tmp_8_fu_280_p2 = (8'd127 - loc_V_fu_196_p4);

assign tmp_9_fu_329_p1 = $unsigned(sh_assign_1_cast_fu_323_p1);

assign tmp_fu_705_p2 = (not_Result_i4_fu_640_p2 & sel_tmp1_fu_700_p2);

assign tmp_i1_fu_535_p1 = Z2_ind_V_reg_1039;

assign tmp_i_cast_fu_240_p1 = loc_V_fu_196_p4;

assign tmp_i_i_fu_210_p2 = ((loc_V_fu_196_p4 == 8'd255) ? 1'b1 : 1'b0);

assign x_is_ninf_fu_797_p2 = (ap_reg_pp0_iter19_tmp_4_i_i_reg_921 & ap_reg_pp0_iter19_p_Result_s_reg_908);

always @ (posedge ap_clk) begin
    p_Val2_25_cast1_reg_959[3:0] <= 4'b0000;
    tmp_39_reg_1137[31] <= 1'b0;
end

endmodule //exp_generic_float_s
