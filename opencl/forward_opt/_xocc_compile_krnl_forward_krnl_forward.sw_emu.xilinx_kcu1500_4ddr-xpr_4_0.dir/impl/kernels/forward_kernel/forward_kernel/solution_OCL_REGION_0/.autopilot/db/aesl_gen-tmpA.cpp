// AUTOGENERATED by Xilinx OpenCL - do not modify

#line 1 "forward_kernel_compute_unit"
#include "/home/opt/Xilinx/SDx/2017.2/Vivado_HLS/common/technology/autopilot/opencl/libspir_types.h"

#include "/home/opt/Xilinx/SDx/2017.2/Vivado_HLS/common/technology/autopilot/etc/autopilot_ssdm_op.h"
#include "/home/opt/Xilinx/SDx/2017.2/Vivado_HLS/common/technology/autopilot/ap_cint.h"
#define XCL_SIZE_T __spir_size_t

/* KernelID: A, Kernel Name: forward_kernel */

class aesl_keep_name_class;
typedef struct {
  unsigned int x;
  unsigned int y;
  unsigned int z;
  friend class ::aesl_keep_name_class;
} three_tuple_t;

typedef struct {
  XCL_SIZE_T src_data;
  XCL_SIZE_T dst_data;
  XCL_SIZE_T w01;
  XCL_SIZE_T b1;
  XCL_SIZE_T w12;
  XCL_SIZE_T b2;
  XCL_SIZE_T w23;
  XCL_SIZE_T b3;
  friend class ::aesl_keep_name_class;
} forward_kernel_args_t;

class aesl_keep_name_class {
public:
  inline __attribute__((always_inline)) static void
  aesl_keep_name_0_args(forward_kernel_args_t* args) {
    _ssdm_op_SpecExt("member_name", "src_data", &args->src_data);
    _ssdm_op_SpecExt("member_name", "dst_data", &args->dst_data);
    _ssdm_op_SpecExt("member_name", "w01", &args->w01);
    _ssdm_op_SpecExt("member_name", "b1", &args->b1);
    _ssdm_op_SpecExt("member_name", "w12", &args->w12);
    _ssdm_op_SpecExt("member_name", "b2", &args->b2);
    _ssdm_op_SpecExt("member_name", "w23", &args->w23);
    _ssdm_op_SpecExt("member_name", "b3", &args->b3);
  }
};

extern "C" {

extern void __SPIR_kernelA(...);
void __AESL_call_work_itemA(...);

void
__AESL_call_work_item_NA(volatile __attribute__((address_space(16776960))) unsigned int* gmem, __spir_rt_info_t *rt_info, forward_kernel_args_t *args)
{
  volatile __attribute__((address_space(16776960))) unsigned int *arg_src_data = (gmem + ((XCL_SIZE_T)args->src_data >> 2));
  volatile __attribute__((address_space(16776960))) unsigned int *arg_dst_data = (gmem + ((XCL_SIZE_T)args->dst_data >> 2));
  volatile __attribute__((address_space(16776960))) unsigned int *arg_w01 = (gmem + ((XCL_SIZE_T)args->w01 >> 2));
  volatile __attribute__((address_space(16776960))) unsigned int *arg_b1 = (gmem + ((XCL_SIZE_T)args->b1 >> 2));
  volatile __attribute__((address_space(16776960))) unsigned int *arg_w12 = (gmem + ((XCL_SIZE_T)args->w12 >> 2));
  volatile __attribute__((address_space(16776960))) unsigned int *arg_b2 = (gmem + ((XCL_SIZE_T)args->b2 >> 2));
  volatile __attribute__((address_space(16776960))) unsigned int *arg_w23 = (gmem + ((XCL_SIZE_T)args->w23 >> 2));
  volatile __attribute__((address_space(16776960))) unsigned int *arg_b3 = (gmem + ((XCL_SIZE_T)args->b3 >> 2));
  __SPIR_kernelA(rt_info, arg_src_data, arg_dst_data, arg_w01, arg_b1, arg_w12, arg_b2, arg_w23, arg_b3);
  return;
}

void
__AESL_work_groupA(__attribute__((address_space(16776960))) volatile unsigned int* gmem, forward_kernel_args_t *args)
{
#define RT_INFO_REQD_LOCAL_SIZE_X 1
#define RT_INFO_REQD_LOCAL_SIZE_Y 1
#define RT_INFO_REQD_LOCAL_SIZE_Z 1
::aesl_keep_name_class::aesl_keep_name_0_args(args);
_ssdm_op_SpecInterface(gmem, "m_axi", 0, 0, "",128, 0, "", "", "", 16, 16, 16, 16, "", "");
_ssdm_op_SpecInterface(0, "s_axilite", 0, 0, "", 0, 0, "control", "", "", 0, 0, 0, 0, "", "");
_ssdm_op_SpecInterface(args, "s_axilite", 0, 0, "", 0, 0, "control", "", "", 0, 0, 0, 0, "", "");
#define CALL_WORK_ITEM_FUNC __AESL_call_work_itemA
#include "aesl_gen_cu_body.inc"
CALL_WORK_ITEM_FUNC(gmem, &rt_info, args);
#undef  CALL_WORK_ITEM_FUNC
return;
#undef RT_INFO_REQD_LOCAL_SIZE_X
#undef RT_INFO_REQD_LOCAL_SIZE_Y
#undef RT_INFO_REQD_LOCAL_SIZE_Z
}

} // extern C
